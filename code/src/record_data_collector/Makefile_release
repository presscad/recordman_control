#define the path of search
VPATH = -I../../common \
		-I../../common_open_source/rabbitmq/include \
		-I../../common_open_source/cJSON \
		-I../../common_open_source/tinyxml2 \
		-I./

#define compile obj
common_obj = CCommonFile.o common_lib.o common_time.o DfuMsgParser.o globalfun.o Lock.o \
				LogFile.o MessageLog.o Net.o RecordmanThread.o SafeLock.o StrongString.o \
				RabbitmqAccess.o JsonMsgParser.o MongodbAccess.o

json_objects = cJSON.o

tiny_xml_objects = tinyxml2.o

cur_objects = CommandHandlerMgr.o CommandHandlerSession.o InternalCommuMgr.o ConfigVariableMgr.o \
				GlobalFunction.o Main.o RecordAPCIHandler.o RecordDataCollector.o

AllOBJ =  $(common_obj) $(json_objects) $(tiny_xml_objects) $(cur_objects)

#define compile param
LIBS = -rdynamic
CFLAGS = -O2 -w -fpic -DOS_LINUX
LINK_FLAGS = -lpthread -ldl -L../../common_open_source/rabbitmq/lib/linux-x86-64/ -lrabbitmq

#define compile program param
VERSION = 1.0.1
TARGETFILENAME = record_data_collector
TARGETPATH = ../../bin/record_data_collector/

$(TARGETFILENAME)-$(VERSION) : $(AllOBJ) mkxjtargetdir
	g++ -o $(TARGETPATH)$(TARGETFILENAME)-$(VERSION) $(AllOBJ) $(LIBS) $(CFLAGS) $(VPATH) $(LINK_FLAGS)

$(common_obj):%.o: ../../common/%.cpp
	g++  $(LIBS) $(CFLAGS) $(VPATH) -c -o $@ $<

$(json_objects):%.o: ../../common_open_source/cJSON/%.cpp
	g++  $(LIBS) $(CFLAGS) $(VPATH) -c -o $@ $<

$(tiny_xml_objects):%.o: ../../common_open_source/tinyxml2/%.cpp
	g++  $(LIBS) $(CFLAGS) $(VPATH) -c -o $@ $<

$(cur_objects):%.o: %.cpp
	g++  $(LIBS) $(CFLAGS) $(VPATH) -c -o $@ $<

.PHONY : mkxjtargetdir clean

mkxjtargetdir :
	if [ ! -d $(TARGETPATH) ]; then mkdir -p $(TARGETPATH); fi

clean :
	-rm $(TARGETPATH)$(TARGETFILENAME)-$(VERSION) $(AllOBJ)